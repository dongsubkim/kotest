"use strict";(self.webpackChunkkotestdocs=self.webpackChunkkotestdocs||[]).push([[162],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return u}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var r=a.createContext({}),d=function(e){var t=a.useContext(r),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(r.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,r=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=d(n),u=i,h=m["".concat(r,".").concat(u)]||m[u]||p[u]||o;return n?a.createElement(h,s(s({ref:t},c),{},{components:n})):a.createElement(h,s({ref:t},c))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,s=new Array(o);s[0]=m;var l={};for(var r in t)hasOwnProperty.call(t,r)&&(l[r]=t[r]);l.originalType=e,l.mdxType="string"==typeof e?e:i,s[1]=l;for(var d=2;d<o;d++)s[d]=n[d];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4495:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return r},metadata:function(){return d},toc:function(){return c},default:function(){return m}});var a=n(7462),i=n(3366),o=(n(7294),n(3905)),s=["components"],l={id:"conditional_evaluation",title:"Conditional Evaluation",slug:"conditional-evaluation.html"},r=void 0,d={unversionedId:"framework/conditional_evaluation",id:"framework/conditional_evaluation",isDocsHomePage:!1,title:"Conditional Evaluation",description:"There are several ways to disable tests. Some of these are hardcoded in your test, others are evaluated at runtime.",source:"@site/docs/framework/conditional_evaluation.md",sourceDirName:"framework",slug:"/framework/conditional-evaluation.html",permalink:"/docs/framework/conditional-evaluation.html",editUrl:"https://github.com/kotest/kotest/blob/master/documentation/docs/framework/conditional_evaluation.md",tags:[],version:"current",frontMatter:{id:"conditional_evaluation",title:"Conditional Evaluation",slug:"conditional-evaluation.html"},sidebar:"framework",previous:{title:"Testing Styles",permalink:"/docs/framework/testing-styles.html"},next:{title:"Isolation Modes",permalink:"/docs/framework/isolation-mode.html"}},c=[{value:"By Config",id:"by-config",children:[],level:3},{value:"Focus",id:"focus",children:[],level:3},{value:"Bang",id:"bang",children:[],level:3},{value:"X-Methods",id:"x-methods",children:[],level:3},{value:"@Ignored",id:"ignored",children:[],level:3},{value:"@EnabledIf",id:"enabledif",children:[],level:3},{value:"Gradle Test Filtering",id:"gradle-test-filtering",children:[],level:2}],p={toc:c};function m(e){var t=e.components,n=(0,i.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"There are several ways to disable tests. Some of these are hardcoded in your test, others are evaluated at runtime."),(0,o.kt)("h3",{id:"by-config"},"By Config"),(0,o.kt)("p",null,"You can disable a test case simply by setting the config parameter ",(0,o.kt)("inlineCode",{parentName:"p"},"enabled")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"false"),".\nIf you're looking for something like JUnit's ",(0,o.kt)("inlineCode",{parentName:"p"},"@Ignore"),", this is for you."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'"should do something".config(enabled = false) {\n  ...\n}\n')),(0,o.kt)("p",null,"You can use the same mechanism to run tests only under certain conditions.\nFor example you could run certain tests only on Linux systems using\n",(0,o.kt)("a",{parentName:"p",href:"https://commons.apache.org/proper/commons-lang/javadocs/api-release/org/apache/commons/lang3/SystemUtils.html#IS_OS_LINUX"},(0,o.kt)("inlineCode",{parentName:"a"},"SystemUtils.IS_OS_LINUX"))," from ",(0,o.kt)("a",{parentName:"p",href:"https://commons.apache.org/proper/commons-lang/"},"Apache Commons Lang"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'"should do something".config(enabled = IS_OS_LINUX) {\n  ...\n}\n')),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"isLinux")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"isPostgreSQL")," in the example are just expressions (values, variables, properties, function calls) that evaluate to ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,o.kt)("p",null,"If you want to use a function that is based on the test rather than a value, then you can use ",(0,o.kt)("inlineCode",{parentName:"p"},"enabledIf"),"."),(0,o.kt)("p",null,'For example, if we wanted to disable all tests that begin with the word "danger" unless we were executing on Linux, then we could do this:'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'val disableDangerOnWindows: EnabledIf = { !it.name.startsWith("danger") || IS_OS_LINUX }\n\n"danger will robinson".config(enabledIf = disableDangerOnWindows) {\n  // test here\n}\n\n"very safe will".config(enabledIf = disableDangerOnWindows) {\n // test here\n}\n')),(0,o.kt)("h3",{id:"focus"},"Focus"),(0,o.kt)("p",null,"Kotest supports isolating a single ",(0,o.kt)("strong",{parentName:"p"},"top level")," test by preceding the test name with ",(0,o.kt)("inlineCode",{parentName:"p"},"f:"),".\nThen only that test (and any subtests defined inside that scope) will be executed, with the rest being skipped."),(0,o.kt)("p",null,"For example, in the following snippet only the middle test will be executed."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'class FocusExample : StringSpec({\n    "test 1" {\n     // this will be skipped\n    }\n\n    "f:test 2" {\n     // this will be executed\n    }\n\n    "test 3" {\n     // this will be skipped\n    }\n})\n')),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Focus mode ",(0,o.kt)("strong",{parentName:"p"},"does not")," work for nested tests due to the fact that nested tests are only discovered once the parent test has executed."))),(0,o.kt)("h3",{id:"bang"},"Bang"),(0,o.kt)("p",null,"The opposite of focus is possible, which is to prefix a test with an exclamation mark ",(0,o.kt)("inlineCode",{parentName:"p"},"!")," and then that test (and any subtests defined inside that scope) will be skipped.\nIn the next example we\u2019ve disabled the first test by adding the \u201c!\u201d prefix."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'class BangExample : StringSpec({\n\n  "!test 1" {\n    // this will be ignored\n  }\n\n  "test 2" {\n    // this will run\n  }\n\n  "test 3" {\n    // this will run too\n  }\n})\n')),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"If you want to disable the use of ! then set the system property ",(0,o.kt)("inlineCode",{parentName:"p"},"kotest.bang.disable")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),"."))),(0,o.kt)("h3",{id:"x-methods"},"X-Methods"),(0,o.kt)("p",null,"Many spec styles offer variants of their keywords that begin with ",(0,o.kt)("inlineCode",{parentName:"p"},"x")," to disable execution.\nThis is a popular approach with Javascript testing frameworks. The idea is you can quickly add the x character\nto the test declaration to (temporarily) disable it."),(0,o.kt)("p",null,"For example, with describe spec we can do this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'class XMethodsExample : DescribeSpec({\n\n  xdescribe("this block and it\'s children are now disabled") {\n    it("will not run") {\n      // disabled test\n    }\n  }\n\n})\n')),(0,o.kt)("p",null,"See which specs support this, and the syntax required on the ",(0,o.kt)("a",{parentName:"p",href:"/docs/framework/testing-styles.html"},"specs styles guide"),"."),(0,o.kt)("h3",{id:"ignored"},"@Ignored"),(0,o.kt)("p",null,"If you wish to disable all tests in a Spec, we may use the @Ignored annotation. Then the spec will be skipped, and not even instantiated."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'@Ignored\nclass IgnoredSpec : FunSpec() {\n  init {\n    error("boom") // spec will not be created so this error will not happen\n  }\n}\n')),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"This is only available on the JVM target."))),(0,o.kt)("h3",{id:"enabledif"},"@EnabledIf"),(0,o.kt)("p",null,"Similar to @Ignored, we can use a function to determine if a spec should be created.\nThe @EnabledIf annotation requires a class that implements ",(0,o.kt)("inlineCode",{parentName:"p"},"EnabledCondition"),"."),(0,o.kt)("p",null,"For example, we may wish to only execute a test on Linux platforms if the name contains Linux."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'class LinuxOnlyCondition : EnabledCondition() {\n   override fun enabled(specKlass: KClass<out Spec>): Boolean =\n      if (specKlass.simpleName?.contains("Linux") == true) IS_OS_LINUX else true\n}\n')),(0,o.kt)("p",null,"Then we can apply that to one or more specs"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"@EnabledIf(LinuxOnlyCondition::class)\nclass MyLinuxTest1 : FunSpec() {\n  ..\n}\n\n@EnabledIf(LinuxOnlyCondition::class)\nclass MyLinuxTest2 : DescribeSpec() {\n  ..\n}\n")),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"This is only available on the JVM target."))),(0,o.kt)("h2",{id:"gradle-test-filtering"},"Gradle Test Filtering"),(0,o.kt)("p",null,"When running Kotest via the JUnit Platform runner through gradle, Kotest supports the standard gradle syntax for\ntest filtering. You can enable filtering either in the build script or via the --tests command-line option."),(0,o.kt)("p",null,"For example, in the build script:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-groovy"},'tasks.test {\n    filter {\n        //include all tests from package\n        includeTestsMatching("com.sksamuel.somepackage.*")\n    }\n}\n')),(0,o.kt)("p",null,"Or via the command line:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"gradle test --tests 'com.sksamuel.somepackage*'")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"gradle test --tests '*IntegrationTest'")),(0,o.kt)("p",null,"See full Gradle documentation ",(0,o.kt)("a",{parentName:"p",href:"https://docs.gradle.org/6.2.2/userguide/java_testing.html#test_filtering"},"here"),"."),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Because gradle's test support is method/class based, we cannot filter tests down to the individual test level, only the class level."))))}m.isMDXComponent=!0}}]);
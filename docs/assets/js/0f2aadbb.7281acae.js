"use strict";(self.webpackChunkkotestdocs=self.webpackChunkkotestdocs||[]).push([[786],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),l=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,k=d["".concat(c,".").concat(m)]||d[m]||p[m]||i;return n?o.createElement(k,s(s({ref:t},u),{},{components:n})):o.createElement(k,s({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=d;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:r,s[1]=a;for(var l=2;l<i;l++)s[l]=n[l];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3546:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return a},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var o=n(7462),r=n(3366),i=(n(7294),n(3905)),s=["components"],a={id:"koin",title:"Koin",sidebar_label:"Koin",slug:"koin.html"},c=void 0,l={unversionedId:"extensions/koin",id:"extensions/koin",isDocsHomePage:!1,title:"Koin",description:"Koin",source:"@site/docs/extensions/koin.md",sourceDirName:"extensions",slug:"/extensions/koin.html",permalink:"/docs/extensions/koin.html",editUrl:"https://github.com/kotest/kotest/blob/master/documentation/docs/extensions/koin.md",tags:[],version:"current",frontMatter:{id:"koin",title:"Koin",sidebar_label:"Koin",slug:"koin.html"},sidebar:"extensions",previous:{title:"Current Instant Listeners",permalink:"/docs/extensions/instant.html"},next:{title:"WireMock",permalink:"/docs/extensions/wiremock.html"}},u=[{value:"Koin",id:"koin",children:[],level:2}],p={toc:u};function d(e){var t=e.components,n=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"koin"},"Koin"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"https://insert-koin.io/"},"Koin DI Framework")," can be used with Kotest through the ",(0,i.kt)("inlineCode",{parentName:"p"},"KoinListener")," test listener and its own interface ",(0,i.kt)("inlineCode",{parentName:"p"},"KoinTest"),"."),(0,i.kt)("p",null,"To add the listener to your project, add the dependency to your project:"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://search.maven.org/artifact/io.kotest.extensions/kotest-extensions-koin"},(0,i.kt)("img",{src:"https://img.shields.io/maven-central/v/io.kotest.extensions/kotest-extensions-koin.svg?label=latest%20release"})),"\n",(0,i.kt)("a",{parentName:"p",href:"https://oss.sonatype.org/content/repositories/snapshots/io/kotest/extensions/kotest-extensions-koin/"},(0,i.kt)("img",{src:"https://img.shields.io/nexus/s/https/oss.sonatype.org/io.kotest.extensions/kotest-extensions-koin.svg?label=latest%20snapshot"}))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"io.kotest.extensions:kotest-extensions-koin:${version}\n")),(0,i.kt)("p",null,"With the dependency added, we can use Koin in our tests!"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'class KotestAndKoin : FunSpec(), KoinTest {\n\n    override fun listeners() = listOf(KoinListener(myKoinModule))\n\n    val userService by inject<UserService>()\n\n    init {\n      test("Use user service") {\n        userService.getUser().username shouldBe "LeoColman"\n      }\n    }\n\n}\n')))}d.isMDXComponent=!0}}]);